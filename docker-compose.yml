version: "3.7"
services:
  fla_postgres:
    container_name: ${PROJECT_SLUG}_postgres
    hostname: ${PROJECT_SLUG}_postgres
    restart: on-failure
    image: postgres:14.1
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_MULTIPLE_DATABASES=${POSTGRES_MULTIPLE_DATABASES}
    volumes:
      - ./docker-images/docker-psql:/docker-entrypoint-initdb.d
      - ./docker-images/docker-psql/multiple:/docker-entrypoint-initdb.d/multiple
    ports:
      - "${PG_EXPOSED_PORT}:${PG_EXPOSED_PORT}"
    expose:
      - ${PG_EXPOSED_PORT}
    deploy:
      resources:
        limits:
          memory: 150M
        reservations:
          memory: 150M
    networks:
      fla_net:
        ipv4_address: ${POSTGRES_IP}

  fla_backend:
    hostname: ${PROJECT_SLUG}_backend
    container_name: ${PROJECT_SLUG}_backend
    build:
      context: favourite-lyrics-starter/.
    ports:
      - "8081:8080"
    restart: on-failure
    deploy:
      resources:
        limits:
          memory: 300M
        reservations:
          memory: 300M
    networks:
      fla_net:
        ipv4_address: ${FLA_BACKEND}

  fla_nginx:
    hostname: ${PROJECT_SLUG}-nginx
    container_name: ${PROJECT_SLUG}-nginx
    build:
      context: ./favourite-lyrics-gui/.
    ports:
      - "8080:8080"
    restart: on-failure
    environment:
      - FLA_BACKEND=${FLA_BACKEND}
    deploy:
      resources:
        limits:
          memory: 300M
        reservations:
          memory: 300M
    env_file:
      - .env
    networks:
      fla_net:
        ipv4_address: ${FLA_NGINX_IP}

networks:
  fla_net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: ${NETWORK_SUBNET}
