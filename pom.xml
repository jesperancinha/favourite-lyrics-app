<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <packaging>pom</packaging>
    <modules>
        <module>favourite-lyrics-domain</module>
        <module>favourite-lyrics-core</module>
        <module>favourite-lyrics-jpa</module>
        <module>favourite-lyrics-starter</module>
        <module>favourite-lyrics-test</module>
        <module>favourite-lyrics-rest</module>
    </modules>

    <groupId>org.jesperancinha.lyrics</groupId>
    <artifactId>favourite-lyrics</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>favourite-lyrics</name>
    <description>Favourite Lyrics App</description>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>17</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <maven-surefire-plugin.version>3.0.0-M7</maven-surefire-plugin.version>
        <versions-maven-plugin.version>2.13.0</versions-maven-plugin.version>

        <kotlinx-coroutines-debug.version>1.6.4</kotlinx-coroutines-debug.version>
        <lombok.version>1.18.24</lombok.version>

        <postgresql.version>42.5.1</postgresql.version>
        <h2.version>1.4.200</h2.version>

        <junit-jupiter.version>5.5.2</junit-jupiter.version>
        <assertj-core.version>3.13.2</assertj-core.version>
        <mockito-all.version>1.10.19</mockito-all.version>
        <testcontainers.version>1.17.5</testcontainers.version>
        <mockito-junit-jupiter.version>3.1.0</mockito-junit-jupiter.version>

        <spring-boot-starter-parent.version>3.0.0</spring-boot-starter-parent.version>
        <omni-coveragereporter-maven-plugin.version>0.3.0</omni-coveragereporter-maven-plugin.version>
        <jacoco-maven-plugin.version>0.8.8</jacoco-maven-plugin.version>
        <springdoc-openapi-starter-webmvc-ui.version>2.0.0</springdoc-openapi-starter-webmvc-ui.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- Imports -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-parent</artifactId>
                <version>${spring-boot-starter-parent.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- Inner dependencies -->
            <dependency>
                <groupId>org.jesperancinha.lyrics</groupId>
                <artifactId>favourite-lyrics-domain</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jesperancinha.lyrics</groupId>
                <artifactId>favourite-lyrics-core</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jesperancinha.lyrics</groupId>
                <artifactId>favourite-lyrics-rest</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jesperancinha.lyrics</groupId>
                <artifactId>favourite-lyrics-jpa</artifactId>
                <version>${project.version}</version>
            </dependency>

            <!-- External dependencies -->
            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
                <version>${springdoc-openapi-starter-webmvc-ui.version}</version>
            </dependency>
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
                <optional>true</optional>
            </dependency>
            <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${postgresql.version}</version>
            </dependency>

            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>testcontainers</artifactId>
                <version>${testcontainers.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>junit-jupiter</artifactId>
                <version>${testcontainers.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>postgresql</artifactId>
                <version>${testcontainers.version}</version>
            </dependency>
            <!-- This Dependency is added as a workaround for the following issue -->
            <!--- https://github.com/Kotlin/kotlinx.coroutines/issues/3334 -->
            <dependency>
                <groupId>org.jetbrains.kotlinx</groupId>
                <artifactId>kotlinx-coroutines-debug</artifactId>
                <version>${kotlinx-coroutines-debug.version}</version>
                <scope>test</scope>
                <exclusions>
                    <exclusion>
                        <groupId>org.jetbrains.kotlinx</groupId>
                        <artifactId>kotlinx-coroutines-bom</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>report</id>
                            <phase>test</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.jesperancinha.plugins</groupId>
                    <artifactId>omni-coveragereporter-maven-plugin</artifactId>
                    <version>${omni-coveragereporter-maven-plugin.version}</version>
                    <configuration>
                        <useCoverallsCount>false</useCoverallsCount>
                        <fetchBranchNameFromEnv>true</fetchBranchNameFromEnv>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
                <version>${versions-maven-plugin.version}</version>
                <configuration>
                    <excludes>
                        <exclude>org.apache.commons:commons-collections4</exclude>
                    </excludes>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
